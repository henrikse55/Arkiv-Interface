@model Arkiv.Models.ArchiveJoinedModel

@{
    ViewData["Title"] = "Index";
}

<div class="container-fluid text-center" id="IndexApp">
    <strong>Hello, @User.Identity.Name</strong>
    <hr />
    <div class="row">
        <div class="col-md-2" style="position: sticky; top: 0; height: 100%;">
            <h2>Filter section</h2>
            <div class="table-bordered">
                <select asp-items="Model.selectListItems" v-on:change="GetSelectedItem()" v-model="selectedItem" id="dropdownindex" class="form-control btn btn-dark dropdown">
                    <option value="">--- Pick a filter ---</option>
                </select>
                <div class="table-bordered" id="FilterContainer" style="overflow-y: scroll; max-height: 800px;">
                    <filter-template v-for="item in filters" :key="item" v-bind:name="item"></filter-template>
                </div>
                <input type="button" value="Apply Filters" id="ApplyButton" class="form-control" v-on:click="PostFilters" />

            </div>
            <div class="progress" style="background-color: white;">
                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="visibility: hidden; width: 100%" id="ProgressBar"></div>
            </div>
        </div>
        <div class="col-md-10">
            <h1>Table section</h1>
            <div id="TableContainer" style="border: 1px solid #ccc; overflow: auto;">
                @await Html.PartialAsync("TablePartial", Model)
            </div>
        </div>
    </div>
</div>

<script type="text/x-template" id="filter-template">
    <div :id="'FilterPartial' + name">
        <p>
            <div class="container">
                <a class="btn btn-primary btn-block" data-toggle="collapse" :href="'#CollapseFilter'  + name ">{{ name }}</a>
            </div>
        </p>
        <div class="collapse" :id="'CollapseFilter' + name">
            <div class="card">
                <div class="card-body">
                    <select v-model="option" class="form-control" v-on:change="ChangeTextInputType(name)">
                        <option value="Single">Single</option>
                        <option value="Range">Range</option>
                    </select>
                    <br />
                    <div :id="'TextInputContainer' + name">
                        <input type="text" class="form-control FilterGroup" :id="'Filtering_' + name " />
                    </div>
                    <hr />
                    <input type="button" class="btn btn-danger form-control" value="Remove" v-on:click="RemoveFilter(name)" />
                </div>
            </div>
        </div>
    </div>
</script>